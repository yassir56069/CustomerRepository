@* TODO: SETUP CRUD INTERFACE. for now just a test for the database connections working properly. *@


@page "/Crud"
@using CustomerRepo.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext

<h3>Users</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (users == null || !users.Any())
{
    <p>No users found in the database.</p>
}
else
{
    <ul>
        @foreach (var user in users)
        {
            <li>@user.UserName</li>
        }
    </ul>
}

@code {
    private List<BCO_User> users = new List<BCO_User>(); // Initialize to avoid null checks
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Query the database
            users = await DbContext.BCO_Users.ToListAsync();

            // Basic print for debugging 
            if (users.Any())
            {
                Console.WriteLine("Users retrieved from database:");
                foreach (var user in users)
                {
                    Console.WriteLine($"ID: {user.UserID}, Name: {user.UserName}");
                }
            }
            else
            {
                Console.WriteLine("No users found in the database.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error while querying the database:");
            Console.WriteLine(ex.Message);
            Console.WriteLine(ex.StackTrace);
        }
        finally
        {
            isLoading = false;
        }
    }
}
